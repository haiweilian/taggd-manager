import{_ as t,c as a,o as e,a2 as r}from"./chunks/framework.9P3ITJTm.js";const c=JSON.parse('{"title":"Taggd.Tag","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/taggd.tag.md","filePath":"zh/api/taggd.tag.md"}'),d={name:"zh/api/taggd.tag.md"},n=r('<h1 id="taggd-tag" tabindex="-1">Taggd.Tag <a class="header-anchor" href="#taggd-tag" aria-label="Permalink to &quot;Taggd.Tag&quot;">​</a></h1><h3 id="new-tag-position-text-buttonattributes-popupattributes" tabindex="-1">new Tag(position, text, [buttonAttributes], [popupAttributes]) <a class="header-anchor" href="#new-tag-position-text-buttonattributes-popupattributes" aria-label="Permalink to &quot;new Tag(position, text, [buttonAttributes], [popupAttributes])&quot;">​</a></h3><p>创建一个 Tag 新实例</p><table tabindex="0"><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>position</td><td>Object</td><td></td><td>tag 坐标</td></tr><tr><td>text</td><td>String | function</td><td></td><td>tag 内容</td></tr><tr><td>[buttonAttributes]</td><td>Object</td><td>{}</td><td>button 自定义属性</td></tr><tr><td>[popupAttributes]</td><td>Object</td><td>{}</td><td>popup 自定义属性</td></tr></tbody></table><h3 id="tag-on-eventname-handler" tabindex="-1">tag.on(eventName, handler) <a class="header-anchor" href="#tag-on-eventname-handler" aria-label="Permalink to &quot;tag.on(eventName, handler)&quot;">​</a></h3><p>订阅事件</p><p><strong>Kind</strong>: instance method of <a href="#Tag">Tag</a><br><strong>Returns</strong>: Taggd.Tag - 当前 Tag 实例</p><table tabindex="0"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>eventName</td><td>String</td><td>事件名称</td></tr><tr><td>handler</td><td>function</td><td>事件回调</td></tr></tbody></table><h3 id="tag-off-eventname-handler" tabindex="-1">tag.off(eventName, handler) <a class="header-anchor" href="#tag-off-eventname-handler" aria-label="Permalink to &quot;tag.off(eventName, handler)&quot;">​</a></h3><p>取消订阅事件</p><p><strong>Kind</strong>: instance method of <a href="#Tag">Tag</a><br><strong>Returns</strong>: Taggd.Tag - 当前 Tag 实例</p><table tabindex="0"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>eventName</td><td>String</td><td>事件名称</td></tr><tr><td>handler</td><td>function</td><td>事件回调</td></tr></tbody></table><h3 id="tag-once-eventname-handler" tabindex="-1">tag.once(eventName, handler) <a class="header-anchor" href="#tag-once-eventname-handler" aria-label="Permalink to &quot;tag.once(eventName, handler)&quot;">​</a></h3><p>触发一次订阅后，立即取消订阅</p><p><strong>Kind</strong>: instance method of <a href="#Tag">Tag</a><br><strong>Returns</strong>: Taggd.Tag - 当前 Tag 实例</p><table tabindex="0"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>eventName</td><td>String</td><td>事件名称</td></tr><tr><td>handler</td><td>function</td><td>事件回调</td></tr></tbody></table><h3 id="tag-ishidden" tabindex="-1">tag.isHidden() <a class="header-anchor" href="#tag-ishidden" aria-label="Permalink to &quot;tag.isHidden()&quot;">​</a></h3><p>当前 tag 是否隐藏</p><p><strong>Kind</strong>: instance method of <a href="#Tag">Tag</a><br><strong>Returns</strong>: Boolean - true/false</p><h3 id="tag-show" tabindex="-1">tag.show() <a class="header-anchor" href="#tag-show" aria-label="Permalink to &quot;tag.show()&quot;">​</a></h3><p>显示 tag 内容</p><p><strong>Kind</strong>: instance method of <a href="#Tag">Tag</a><br><strong>Returns</strong>: Taggd.Tag - 当前 Tag 实例</p><h3 id="tag-hide" tabindex="-1">tag.hide() <a class="header-anchor" href="#tag-hide" aria-label="Permalink to &quot;tag.hide()&quot;">​</a></h3><p>隐藏 tag 内容</p><p><strong>Kind</strong>: instance method of <a href="#Tag">Tag</a><br><strong>Returns</strong>: Taggd.Tag - 当前 Tag 实例</p><h3 id="tag-settext-text" tabindex="-1">tag.setText(text) <a class="header-anchor" href="#tag-settext-text" aria-label="Permalink to &quot;tag.setText(text)&quot;">​</a></h3><p>设置 tag 内容</p><p><strong>Kind</strong>: instance method of <a href="#Tag">Tag</a><br><strong>Returns</strong>: Taggd.Tag - 当前 Tag 实例</p><table tabindex="0"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>text</td><td>String | function</td><td>tag 内容，如果是一个函数使用当前函数执行的结果</td></tr></tbody></table><h3 id="tag-setposition-x-y" tabindex="-1">tag.setPosition(x, y) <a class="header-anchor" href="#tag-setposition-x-y" aria-label="Permalink to &quot;tag.setPosition(x, y)&quot;">​</a></h3><p>设置 tag 坐标位置</p><p><strong>Kind</strong>: instance method of <a href="#Tag">Tag</a><br><strong>Returns</strong>: Taggd.Tag - 当前 Tag 实例</p><table tabindex="0"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>x</td><td>Number</td><td>x 坐标</td></tr><tr><td>y</td><td>Number</td><td>y 坐标</td></tr></tbody></table><h3 id="tag-setbuttonattributes-atttributes" tabindex="-1">tag.setButtonAttributes(atttributes) <a class="header-anchor" href="#tag-setbuttonattributes-atttributes" aria-label="Permalink to &quot;tag.setButtonAttributes(atttributes)&quot;">​</a></h3><p>设置 button 属性</p><p><strong>Kind</strong>: instance method of <a href="#Tag">Tag</a><br><strong>Returns</strong>: Taggd.Tag - 当前 Tag 实例</p><table tabindex="0"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>atttributes</td><td>Object</td><td>= {} - 属性信息</td></tr></tbody></table><h3 id="tag-setpopupattributes-atttributes" tabindex="-1">tag.setPopupAttributes(atttributes) <a class="header-anchor" href="#tag-setpopupattributes-atttributes" aria-label="Permalink to &quot;tag.setPopupAttributes(atttributes)&quot;">​</a></h3><p>设置 popup 属性</p><p><strong>Kind</strong>: instance method of <a href="#Tag">Tag</a><br><strong>Returns</strong>: Taggd.Tag - 当前 Tag 实例</p><table tabindex="0"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>atttributes</td><td>Object</td><td>= {} - 属性信息</td></tr></tbody></table><h3 id="tag-enableeditormode" tabindex="-1">tag.enableEditorMode() <a class="header-anchor" href="#tag-enableeditormode" aria-label="Permalink to &quot;tag.enableEditorMode()&quot;">​</a></h3><p>启用编辑模式，可移动、切换状态</p><p><strong>Kind</strong>: instance method of <a href="#Tag">Tag</a><br><strong>Returns</strong>: Taggd.Tag - 当前 Tag 实例</p><h3 id="tag-disableeditormode" tabindex="-1">tag.disableEditorMode() <a class="header-anchor" href="#tag-disableeditormode" aria-label="Permalink to &quot;tag.disableEditorMode()&quot;">​</a></h3><p>禁用编辑模式</p><p><strong>Kind</strong>: instance method of <a href="#Tag">Tag</a><br><strong>Returns</strong>: Taggd.Tag - 当前 Tag 实例</p><h3 id="tag-tojson" tabindex="-1">tag.toJSON() <a class="header-anchor" href="#tag-tojson" aria-label="Permalink to &quot;tag.toJSON()&quot;">​</a></h3><p>获取 tag 信息</p><p><strong>Kind</strong>: instance method of <a href="#Tag">Tag</a><br><strong>Returns</strong>: Object - JSON 对象</p><h3 id="tag-setelementattributes-element-attributes" tabindex="-1">Tag.setElementAttributes(element, [attributes]) <a class="header-anchor" href="#tag-setelementattributes-element-attributes" aria-label="Permalink to &quot;Tag.setElementAttributes(element, [attributes])&quot;">​</a></h3><p>静态方法-设置元素属性</p><p><strong>Kind</strong>: static method of <a href="#Tag">Tag</a><br><strong>Returns</strong>: DomNode - The original element</p><table tabindex="0"><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>element</td><td>DomNode</td><td></td><td>元素</td></tr><tr><td>[attributes]</td><td>Object</td><td>{}</td><td>属性对象</td></tr></tbody></table><h3 id="tag-createfromobject-object" tabindex="-1">Tag.createFromObject(object) <a class="header-anchor" href="#tag-createfromobject-object" aria-label="Permalink to &quot;Tag.createFromObject(object)&quot;">​</a></h3><p>静态方法-对象的方式创建 tag</p><p><strong>Kind</strong>: static method of <a href="#Tag">Tag</a><br><strong>Returns</strong>: <a href="#Tag">Tag</a> - 创建的 Tag 实例</p><table tabindex="0"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>object</td><td>Object</td><td>new Tag 对象方式的参数</td></tr></tbody></table>',58),o=[n];function g(s,h,i,b,l,p){return e(),a("div",null,o)}const T=t(d,[["render",g]]);export{c as __pageData,T as default};
