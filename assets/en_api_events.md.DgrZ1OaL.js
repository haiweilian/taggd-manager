import{_ as t,c as d,o as e,a2 as a}from"./chunks/framework.9P3ITJTm.js";const E=JSON.parse('{"title":"Events","description":"","frontmatter":{},"headers":[],"relativePath":"en/api/events.md","filePath":"en/api/events.md"}'),i={name:"en/api/events.md"},s=a(`<h1 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h1><p>Using the <code>.on()</code>, <code>.once()</code> and <code>.off()</code> methods you can subscribe and unsubscribe to events.</p><ul><li>All of above mentioned methods are available on <code>Taggd</code> and <code>Tag</code> instances.</li><li>To subscribe to an event for <em>all</em> tags, subscribe to that event on the <code>Taggd</code> instance.</li></ul><p>For example:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> image</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my-image&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> taggd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Taggd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(image);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Prevent adding tags</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">taggd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;taggd.tag.add&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">tag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Some events can be prevented by returning false (see tables below)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// This tag isn’t added because of above event handler</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">taggd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Taggd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre></div><h2 id="taggd-events" tabindex="-1">Taggd Events <a class="header-anchor" href="#taggd-events" aria-label="Permalink to &quot;Taggd Events&quot;">​</a></h2><p>The table below lists all available tables for a <code>Taggd</code> instance.</p><p>All <code>taggd.editor*</code> event handlers receive the following arguments:</p><ol><li><code>Taggd</code> instance</li><li><code>[tag / position]</code></li></ol><p>All <code>taggd.tag*</code> event handlers receive the following arguments:</p><ol><li><code>Taggd</code> instance</li><li><code>Tag</code> instance</li></ol><table tabindex="0"><thead><tr><th>Event</th><th>Triggered</th><th>Is preventable by returning <code>false</code></th></tr></thead><tbody><tr><td><code>taggd.destroy</code></td><td>before destroying a <code>Taggd</code> instance</td><td>yes</td></tr><tr><td><code>taggd.editor.enable</code></td><td>before enable editor mode</td><td>yes</td></tr><tr><td><code>taggd.editor.disable</code></td><td>before disabling editor mode</td><td>yes</td></tr><tr><td><code>taggd.editor.load</code></td><td>before load image</td><td>no</td></tr><tr><td><code>taggd.editor.loaded</code></td><td>after load image</td><td>no</td></tr><tr><td><code>taggd.editor.loaderror</code></td><td>after error image</td><td>no</td></tr><tr><td><code>taggd.editor.add</code></td><td>after click image(no move trigger)</td><td>no</td></tr><tr><td><code>taggd.editor.zoom</code></td><td>after zoom image</td><td>no</td></tr><tr><td><code>taggd.editor.movedown</code></td><td>after movedown image</td><td>no</td></tr><tr><td><code>taggd.editor.move</code></td><td>after move image</td><td>no</td></tr><tr><td><code>taggd.editor.moveup</code></td><td>after moveup image</td><td>no</td></tr><tr><td><code>taggd.tag.add</code></td><td>before adding a tag(move trigger)</td><td>yes</td></tr><tr><td><code>taggd.tag.added</code></td><td>after adding a tag</td><td>no</td></tr><tr><td><code>taggd.tag.delete</code></td><td>before deleting a tag</td><td>yes</td></tr><tr><td><code>taggd.tag.deleted</code></td><td>after deleting a tag</td><td>no</td></tr><tr><td><code>taggd.tag.show</code></td><td>before showing a tag</td><td>yes</td></tr><tr><td><code>taggd.tag.shown</code></td><td>after showing a tag</td><td>no</td></tr><tr><td><code>taggd.tag.hide</code></td><td>before hiding a tag</td><td>yes</td></tr><tr><td><code>taggd.tag.hidden</code></td><td>after hiding a tag</td><td>no</td></tr><tr><td><code>taggd.tag.change</code></td><td>before changing a tag</td><td>yes</td></tr><tr><td><code>taggd.tag.changed</code></td><td>after changing a tag</td><td>no</td></tr><tr><td><code>taggd.tag.click</code></td><td>after click a tag(no move trigger)</td><td>no</td></tr><tr><td><code>taggd.tag.editor.enable</code></td><td>before enable editor mode</td><td>yes</td></tr><tr><td><code>taggd.tag.editor.disable</code></td><td>before disabling editor mode</td><td>yes</td></tr><tr><td><code>taggd.tag.editor.movedown</code></td><td>after movedown a tag</td><td>no</td></tr><tr><td><code>taggd.tag.editor.move</code></td><td>after move a tag</td><td>no</td></tr><tr><td><code>taggd.tag.editor.moveup</code></td><td>after moveup a tag(move trigger)</td><td>no</td></tr></tbody></table><h2 id="taggd-tag-events" tabindex="-1">Taggd.Tag Events <a class="header-anchor" href="#taggd-tag-events" aria-label="Permalink to &quot;Taggd.Tag Events&quot;">​</a></h2><p>The table below lists all available tables for a <code>Tag</code> instance.</p><p>All <code>taggd.tag.*</code> event handlers receive the following argument:</p><ol><li><code>Tag</code> instance</li></ol><table tabindex="0"><thead><tr><th>Event</th><th>Triggered</th><th>Is preventable by returning <code>false</code></th></tr></thead><tbody><tr><td><code>taggd.tag.delete</code></td><td>before deleting a tag</td><td>yes</td></tr><tr><td><code>taggd.tag.deleted</code></td><td>after deleting a tag</td><td>no</td></tr><tr><td><code>taggd.tag.show</code></td><td>before showing a tag</td><td>yes</td></tr><tr><td><code>taggd.tag.shown</code></td><td>after showing a tag</td><td>no</td></tr><tr><td><code>taggd.tag.hide</code></td><td>before hiding a tag</td><td>yes</td></tr><tr><td><code>taggd.tag.hidden</code></td><td>after hiding a tag</td><td>no</td></tr><tr><td><code>taggd.tag.change</code></td><td>before changing a tag</td><td>yes</td></tr><tr><td><code>taggd.tag.changed</code></td><td>after changing a tag</td><td>no</td></tr><tr><td><code>taggd.tag.click</code></td><td>after click a tag(no move trigger)</td><td>no</td></tr><tr><td><code>taggd.tag.editor.enable</code></td><td>before enable editor mode</td><td>yes</td></tr><tr><td><code>taggd.tag.editor.disable</code></td><td>before disabling editor mode</td><td>yes</td></tr><tr><td><code>taggd.tag.editor.movedown</code></td><td>after movedown a tag</td><td>no</td></tr><tr><td><code>taggd.tag.editor.move</code></td><td>after move a tag</td><td>no</td></tr><tr><td><code>taggd.tag.editor.moveup</code></td><td>after moveup a tag(move trigger)</td><td>no</td></tr></tbody></table>`,17),o=[s];function n(g,r,l,h,c,p){return e(),d("div",null,o)}const b=t(i,[["render",n]]);export{E as __pageData,b as default};
