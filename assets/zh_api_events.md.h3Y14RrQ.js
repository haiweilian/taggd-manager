import{_ as t,c as d,o as a,a2 as e}from"./chunks/framework.9P3ITJTm.js";const E=JSON.parse('{"title":"Events","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/events.md","filePath":"zh/api/events.md"}'),s={name:"zh/api/events.md"},i=e(`<h1 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h1><p>使用 <code>.on()</code> 、<code>.once()</code> 和 <code>.off()</code> 方法可以订阅和退订事件。</p><ul><li>以上提到的所有方法都可以在 <code>Taggd</code> 和 <code>Tag</code> 实例上使用。</li><li>要订阅所有 <code>Tag</code> 的事件，请在 <code>Taggd</code> 实例上订阅该事件。</li></ul><p>例子：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> image</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my-image&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> taggd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Taggd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(image);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 防止添加标签</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">taggd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;taggd.tag.add&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">tag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 有些事件可以通过返回 false 来阻止(见下表)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 这个标签没有被添加，因为上面的事件处理程序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">taggd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Taggd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre></div><h2 id="taggd-events" tabindex="-1">Taggd Events <a class="header-anchor" href="#taggd-events" aria-label="Permalink to &quot;Taggd Events&quot;">​</a></h2><p>下表列出了 <code>Taggd</code> 实例的所有可用事件。</p><p>所有的 <code>taggd.editor*</code> 事件处理回调接收以下参数：</p><ol><li><code>Taggd</code> instance</li><li><code>[tag / position]</code></li></ol><p>所有的 <code>taggd.tag*</code> 事件处理回调接收以下参数：</p><ol><li><code>Taggd</code> instance</li><li><code>Tag</code> instance</li></ol><table tabindex="0"><thead><tr><th>名称</th><th>描述</th><th>是否返回 <code>false</code> 阻止</th></tr></thead><tbody><tr><td><code>taggd.destroy</code></td><td>销毁 <code>Taggd</code> 实例之前</td><td>yes</td></tr><tr><td><code>taggd.editor.enable</code></td><td>启用编辑器模式之前</td><td>yes</td></tr><tr><td><code>taggd.editor.disable</code></td><td>禁用编辑器模式之前</td><td>yes</td></tr><tr><td><code>taggd.editor.load</code></td><td>加载图片之前</td><td>no</td></tr><tr><td><code>taggd.editor.loaded</code></td><td>加载图片成功</td><td>no</td></tr><tr><td><code>taggd.editor.loaderror</code></td><td>加载图片失败</td><td>no</td></tr><tr><td><code>taggd.editor.add</code></td><td>点击图片区域(没有移动触发)</td><td>no</td></tr><tr><td><code>taggd.editor.zoom</code></td><td>图片缩放</td><td>no</td></tr><tr><td><code>taggd.editor.movedown</code></td><td>图片移动开始</td><td>no</td></tr><tr><td><code>taggd.editor.move</code></td><td>图片移动中</td><td>no</td></tr><tr><td><code>taggd.editor.moveup</code></td><td>图片移动结束(有移动触发)</td><td>no</td></tr><tr><td><code>taggd.tag.add</code></td><td>添加标记之前</td><td>yes</td></tr><tr><td><code>taggd.tag.added</code></td><td>添加标记后</td><td>no</td></tr><tr><td><code>taggd.tag.delete</code></td><td>删除标记之前</td><td>yes</td></tr><tr><td><code>taggd.tag.deleted</code></td><td>删除标记后</td><td>no</td></tr><tr><td><code>taggd.tag.show</code></td><td>显示标记之前</td><td>yes</td></tr><tr><td><code>taggd.tag.shown</code></td><td>显示标记之后</td><td>no</td></tr><tr><td><code>taggd.tag.hide</code></td><td>隐藏标记之前</td><td>yes</td></tr><tr><td><code>taggd.tag.hidden</code></td><td>隐藏标记之后</td><td>no</td></tr><tr><td><code>taggd.tag.change</code></td><td>更改标记之前</td><td>yes</td></tr><tr><td><code>taggd.tag.changed</code></td><td>更改标记后</td><td>no</td></tr><tr><td><code>taggd.tag.click</code></td><td>点击标记后(没有移动触发)</td><td>no</td></tr><tr><td><code>taggd.tag.editor.enable</code></td><td>标记启用编辑器模式之前</td><td>yes</td></tr><tr><td><code>taggd.tag.editor.disable</code></td><td>标记禁用编辑器模式之前</td><td>yes</td></tr><tr><td><code>taggd.tag.editor.movedown</code></td><td>标记移动开始</td><td>no</td></tr><tr><td><code>taggd.tag.editor.move</code></td><td>标记移动中</td><td>no</td></tr><tr><td><code>taggd.tag.editor.moveup</code></td><td>标记移动结束(有移动触发)</td><td>no</td></tr></tbody></table><h2 id="taggd-tag-events" tabindex="-1">Taggd.Tag Events <a class="header-anchor" href="#taggd-tag-events" aria-label="Permalink to &quot;Taggd.Tag Events&quot;">​</a></h2><p>下表列出了一个 <code>Tag</code> 实例的所有可用事件。</p><p>所有的 <code>taggd.tag*</code> 事件处理回调接收到以下参数：</p><ol><li><code>Tag</code> instance</li></ol><table tabindex="0"><thead><tr><th>名称</th><th>描述</th><th>是否返回 <code>false</code> 阻止</th></tr></thead><tbody><tr><td><code>taggd.tag.delete</code></td><td>删除标记之前</td><td>yes</td></tr><tr><td><code>taggd.tag.deleted</code></td><td>删除标记后</td><td>no</td></tr><tr><td><code>taggd.tag.show</code></td><td>显示标记之前</td><td>yes</td></tr><tr><td><code>taggd.tag.shown</code></td><td>显示标记之后</td><td>no</td></tr><tr><td><code>taggd.tag.hide</code></td><td>隐藏标记之前</td><td>yes</td></tr><tr><td><code>taggd.tag.hidden</code></td><td>隐藏标记之后</td><td>no</td></tr><tr><td><code>taggd.tag.change</code></td><td>更改标记之前</td><td>yes</td></tr><tr><td><code>taggd.tag.changed</code></td><td>更改标记后</td><td>no</td></tr><tr><td><code>taggd.tag.click</code></td><td>点击标记后(没有移动触发)</td><td>no</td></tr><tr><td><code>taggd.tag.editor.enable</code></td><td>标记启用编辑器模式之前</td><td>yes</td></tr><tr><td><code>taggd.tag.editor.disable</code></td><td>标记禁用编辑器模式之前</td><td>yes</td></tr><tr><td><code>taggd.tag.editor.movedown</code></td><td>标记移动开始</td><td>no</td></tr><tr><td><code>taggd.tag.editor.move</code></td><td>标记移动中</td><td>no</td></tr><tr><td><code>taggd.tag.editor.moveup</code></td><td>标记移动结束(有移动触发)</td><td>no</td></tr></tbody></table>`,17),o=[i];function n(g,r,c,h,l,p){return a(),d("div",null,o)}const y=t(s,[["render",n]]);export{E as __pageData,y as default};
